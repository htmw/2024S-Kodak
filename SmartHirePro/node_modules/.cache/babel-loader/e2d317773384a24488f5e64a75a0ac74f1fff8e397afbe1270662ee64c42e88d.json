{"ast":null,"code":"var _jsxFileName = \"/Users/seungahchoi/Documents/US/Pace /Spring 2024/CS691/2024S-Kodak/SmartHirePro/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport logo from '/Users/seungahchoi/Documents/US/Pace /Spring 2024/CS691/2024S-Kodak/SmartHirePro/src/Components/assets/logo.jpeg'; // Adjust the path to your actual logo file\nimport LoginSignup from '/Users/seungahchoi/Documents/US/Pace /Spring 2024/CS691/2024S-Kodak/SmartHirePro/src/Components/LoginSignup/LoginSignup.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginSignup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n/*\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const uploadDocument = () => {\n    if (selectedFile) {\n      // You can perform additional checks or validation here\n\n      // Simulate an asynchronous file upload (replace this with actual server-side code)\n      setTimeout(() => {\n        alert('File uploaded successfully!');\n      }, 1000);\n    } else {\n      alert('Please select a file to upload.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"SmartHire Pro Logo\" />\n        <div className=\"Upload-section\">\n          <h2>Upload your Resume!</h2>\n          <input\n            type=\"file\"\n            onChange={handleFileChange}\n            accept=\".pdf, .doc, .docx\"\n          />\n          <button onClick={uploadDocument}>Upload</button>\n         \n        </div>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","LoginSignup","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seungahchoi/Documents/US/Pace /Spring 2024/CS691/2024S-Kodak/SmartHirePro/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport logo from '/Users/seungahchoi/Documents/US/Pace /Spring 2024/CS691/2024S-Kodak/SmartHirePro/src/Components/assets/logo.jpeg'; // Adjust the path to your actual logo file\nimport LoginSignup from '/Users/seungahchoi/Documents/US/Pace /Spring 2024/CS691/2024S-Kodak/SmartHirePro/src/Components/LoginSignup/LoginSignup.jsx'\n\nfunction App() {\n  return (\n    <div>\n      <LoginSignup/>\n    </div>\n  );\n}\nexport default App;\n/*\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const uploadDocument = () => {\n    if (selectedFile) {\n      // You can perform additional checks or validation here\n\n      // Simulate an asynchronous file upload (replace this with actual server-side code)\n      setTimeout(() => {\n        alert('File uploaded successfully!');\n      }, 1000);\n    } else {\n      alert('Please select a file to upload.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"SmartHire Pro Logo\" />\n        <div className=\"Upload-section\">\n          <h2>Upload your Resume!</h2>\n          <input\n            type=\"file\"\n            onChange={handleFileChange}\n            accept=\".pdf, .doc, .docx\"\n          />\n          <button onClick={uploadDocument}>Upload</button>\n         \n        </div>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,kHAAkH,CAAC,CAAC;AACrI,OAAOC,WAAW,MAAM,6HAA6H;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErJ,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA,CAACF,WAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACC,EAAA,GANQN,GAAG;AAOZ,eAAeA,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}